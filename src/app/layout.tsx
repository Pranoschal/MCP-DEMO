import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AI } from "./ai";
import { ChatIdProvider } from "@/context/ChatIdProvider";
import { ServerMessage } from "./actions";
import pb from "@/lib/pocketbase";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};



export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {  
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
      <AI initialAIState={[]} initialUIState={[]}>
        <ChatIdProvider>
        {children}
        </ChatIdProvider>
      </AI>
      </body>
    </html>
  );
}

async function loadChatFromDB(chatId: string) {
  try {
    const messages = await pb.collection("FW_MESSAGES_DATA").getFullList({
      filter: `chat_id = "${chatId}"`, 
      sort: "+created",
    });
    return messages.map((msg) => ({
      id: msg.id,
      role: msg.role,
      content: msg.content,
      chatId: msg.chat_id,
      name: msg.tool || null,
    }));
  } catch (error) {
    console.error("‚ùå Error fetching chat history:", error);
    return [];
  }
}